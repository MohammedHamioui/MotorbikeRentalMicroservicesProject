name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

      motorbike-db:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: motorbikeDB

      client-db:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: clientDB

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and start services using Docker Compose
        run: |
          docker-compose -f docker-compose.yml up --build -d

      - name: Run tests
        run: |
          docker-compose exec motorbike-service ./mvnw test
          docker-compose exec reservation-service ./mvnw test
          docker-compose exec client-service ./mvnw test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images to Docker Hub
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Deploy to Production Server
        run: |
          # Example deployment using SSH to a remote server
          scp -i ${{ secrets.SERVER_SSH_KEY }} docker-compose.yml user@yourserver:/path/to/deploy
          ssh -i ${{ secrets.SERVER_SSH_KEY }} user@yourserver 'cd /path/to/deploy && docker-compose down && docker-compose up -d'

      - name: Verify Deployment
        run: |
          ssh -i ${{ secrets.SERVER_SSH_KEY }} user@yourserver 'curl http://localhost:8080/motorbikes && curl http://localhost:8080/reservations && curl http://localhost:8080/clients'
